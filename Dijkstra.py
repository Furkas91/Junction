from enum import Enum
from ConvertMap import convert_address
from typing import List
from ConvertMap import convert
from ConvertMap import paint_map
#
# T, F = True, False
# array = np.asarray(
#     [[T, F, F, T],
#      [T, T, F, T],
#      [F, T, T, F],
#      [T, T, T, T]])
# costs = np.where(array, 1, 1000)
# path, cost = skimage.graph.shortest_path(
#     costs, start=(0, 0), end=(3, 3), fully_connected=True)
#
# print(path)

class Direction(Enum):
    NORTH = 0
    EAST = 1
    SOUTH = 2
    WEST = 3


class Node:
    def __init__(self, coord: list, path=None, weight=0, visited: bool = False):
        if path is None:
            path = []

        self.path: list = path
        self.coord = coord
        self._visited = visited
        self.weight = weight
        # self.North = None
        # self.East = None
        # self.South = None
        # self.West = None

    # def __eq__(self, other):
    #     return self.lastDir == other.position

    def set_visited(self):
        self._visited = True

    def is_visited(self):
        return self._visited

    # def set_weight(self, weight: int):
    #     self.weight = weight


def add_bounds(node: Node, stack: list, node_grid, grid: List[List[bool]], width,
               height) -> None:
    """
    Warning! Coord and cardinal points are mixed up
    :param height: height of grid
    :param width: width of grid
    :param grid: Grid. 0 - blocked, 1 - open
    :return:
    """
    x = node.coord[0]
    y = node.coord[1]
    if x + 1 < height and grid[x + 1][y] and not node.is_visited():
        if not node_grid[x + 1][y]:
            new_dir = node.path.copy()
            new_dir.append(Direction.SOUTH)
            tmp = Node([x + 1, y],new_dir ,node.weight + 1 )
            node_grid[x + 1][y] = tmp
            stack.append(tmp)
        else:
            tmp: Node = node_grid[x + 1][y]
            if tmp.weight > node.weight + 1:
                tmp.weight = node.weight + 1
                tmp.path = node.path.copy()
                tmp.path.append(Direction.SOUTH)

    if x - 1 >= 0 and grid[x - 1][y] and not node.is_visited():
        if not node_grid[x - 1][y]:
            new_dir = node.path.copy()
            new_dir.append(Direction.NORTH)
            tmp = Node([x - 1, y], new_dir, node.weight + 1)
            node_grid[x - 1][y] = tmp
            stack.append(tmp)
        else:
            tmp: Node = node_grid[x - 1][y]
            if tmp.weight > node.weight + 1:
                tmp.weight = node.weight + 1
                tmp.path = node.path.copy()
                tmp.path.append(Direction.NORTH)

    if y + 1 < width and grid[x][y + 1] and not node.is_visited():
        if not node_grid[x][y + 1]:
            new_dir = node.path.copy()
            new_dir.append(Direction.WEST)
            tmp = Node([x, y + 1], new_dir, node.weight + 1 )
            node_grid[x][y + 1] = tmp
            stack.append(tmp)

        else:
            tmp: Node = node_grid[x][y + 1]
            if tmp.weight > node.weight + 1:
                tmp.weight = node.weight + 1
                tmp.path = node.path.copy()
                tmp.path.append(Direction.WEST)

    if y - 1 >= 0 and grid[x][y - 1] and not node.is_visited():
        if not node_grid[x][y - 1]:
            new_dir = node.path.copy()
            new_dir.append(Direction.EAST)
            tmp = Node([x, y - 1], new_dir, node.weight + 1)
            node_grid[x][y - 1] = tmp
            stack.append(tmp)
        else:
            tmp: Node = node_grid[x][y - 1]
            if tmp.weight > node.weight + 1:
                tmp.weight = node.weight + 1
                tmp.path = node.path.copy()
                tmp.path.append(Direction.EAST)


def some_dijkstra(grid: List[List[bool]], pass_coord: [int], height: int, width: int, car_coord: int):
    # grid with len
    res_node_list = []
    node_grid = [[None for w in range(width)] for h in range(height)]
    double_pass_coord: [[int, int]] = [convert_address(s, width) for s in pass_coord]
    queue = list()
    tmp1 = convert_address(car_coord, width)
    origNode = Node(tmp1)
    x = tmp1[0]
    y = tmp1[1]
    node_grid[x][y] = origNode
    queue.append(origNode)
    print(double_pass_coord)
    while queue:
        tmp: Node = queue.pop(0)
        add_bounds(tmp, queue, node_grid, grid, width, height)
        tmp.set_visited()


        if not double_pass_coord:
            break

        for coord in double_pass_coord:
            if coord[0] == tmp.coord[0] and coord[1] == tmp.coord[1]:
                res_node_list.append(tmp)
                double_pass_coord.remove(coord)
                break

    return res_node_list, node_grid


if __name__ == '__main__':
    t = {'cars': {'0': {'capacity': 5,
                        'position': 175,
                        'team_id': 0,
                        'used_capacity': 0},
                  '1': {'capacity': 5,
                        'position': 83,
                        'team_id': 0,
                        'used_capacity': 0},
                  '10': {'capacity': 5,
                         'position': 820,
                         'team_id': 3,
                         'used_capacity': 0},
                  '11': {'capacity': 5,
                         'position': 502,
                         'team_id': 3,
                         'used_capacity': 0},
                  '12': {'capacity': 5,
                         'position': 437,
                         'team_id': 4,
                         'used_capacity': 0},
                  '13': {'capacity': 5,
                         'position': 501,
                         'team_id': 4,
                         'used_capacity': 0},
                  '14': {'capacity': 5,
                         'position': 59,
                         'team_id': 4,
                         'used_capacity': 0},
                  '15': {'capacity': 5,
                         'position': 352,
                         'team_id': 5,
                         'used_capacity': 0},
                  '16': {'capacity': 5,
                         'position': 303,
                         'team_id': 5,
                         'used_capacity': 0},
                  '17': {'capacity': 5,
                         'position': 140,
                         'team_id': 5,
                         'used_capacity': 0},
                  '18': {'capacity': 5,
                         'position': 140,
                         'team_id': 6,
                         'used_capacity': 0},
                  '19': {'capacity': 5,
                         'position': 294,
                         'team_id': 6,
                         'used_capacity': 0},
                  '2': {'capacity': 5,
                        'position': 440,
                        'team_id': 0,
                        'used_capacity': 0},
                  '20': {'capacity': 5,
                         'position': 267,
                         'team_id': 6,
                         'used_capacity': 0},
                  '21': {'capacity': 5,
                         'position': 80,
                         'team_id': 7,
                         'used_capacity': 0},
                  '22': {'capacity': 5,
                         'position': 135,
                         'team_id': 7,
                         'used_capacity': 0},
                  '23': {'capacity': 5,
                         'position': 679,
                         'team_id': 7,
                         'used_capacity': 0},
                  '24': {'capacity': 5,
                         'position': 494,
                         'team_id': 8,
                         'used_capacity': 0},
                  '25': {'capacity': 5,
                         'position': 642,
                         'team_id': 8,
                         'used_capacity': 0},
                  '26': {'capacity': 5,
                         'position': 679,
                         'team_id': 8,
                         'used_capacity': 0},
                  '27': {'capacity': 5,
                         'position': 444,
                         'team_id': 9,
                         'used_capacity': 0},
                  '28': {'capacity': 5,
                         'position': 966,
                         'team_id': 9,
                         'used_capacity': 0},
                  '29': {'capacity': 5,
                         'position': 485,
                         'team_id': 9,
                         'used_capacity': 0},
                  '3': {'capacity': 5,
                        'position': 407,
                        'team_id': 1,
                        'used_capacity': 0},
                  '30': {'capacity': 5,
                         'position': 825,
                         'team_id': 10,
                         'used_capacity': 0},
                  '31': {'capacity': 5,
                         'position': 732,
                         'team_id': 10,
                         'used_capacity': 0},
                  '32': {'capacity': 5,
                         'position': 876,
                         'team_id': 10,
                         'used_capacity': 0},
                  '33': {'capacity': 5,
                         'position': 726,
                         'team_id': 11,
                         'used_capacity': 0},
                  '34': {'capacity': 5,
                         'position': 221,
                         'team_id': 11,
                         'used_capacity': 0},
                  '35': {'capacity': 5,
                         'position': 135,
                         'team_id': 11,
                         'used_capacity': 0},
                  '4': {'capacity': 5,
                        'position': 839,
                        'team_id': 1,
                        'used_capacity': 0},
                  '5': {'capacity': 5,
                        'position': 606,
                        'team_id': 1,
                        'used_capacity': 0},
                  '6': {'capacity': 5,
                        'position': 821,
                        'team_id': 2,
                        'used_capacity': 0},
                  '7': {'capacity': 5,
                        'position': 460,
                        'team_id': 2,
                        'used_capacity': 0},
                  '8': {'capacity': 5,
                        'position': 151,
                        'team_id': 2,
                        'used_capacity': 0},
                  '9': {'capacity': 5,
                        'position': 802,
                        'team_id': 3,
                        'used_capacity': 0}},
         'customers': {'0': {'car_id': -1,
                             'destination': 227,
                             'origin': 499,
                             'status': 'waiting'},
                       '1': {'car_id': -1,
                             'destination': 76,
                             'origin': 341,
                             'status': 'waiting'},
                       '10': {'car_id': -1,
                              'destination': 131,
                              'origin': 227,
                              'status': 'waiting'},
                       '11': {'car_id': -1,
                              'destination': 97,
                              'origin': 485,
                              'status': 'waiting'},
                       '12': {'car_id': -1,
                              'destination': 428,
                              'origin': 262,
                              'status': 'waiting'},
                       '13': {'car_id': -1,
                              'destination': 918,
                              'origin': 512,
                              'status': 'waiting'},
                       '14': {'car_id': -1,
                              'destination': 265,
                              'origin': 482,
                              'status': 'waiting'},
                       '15': {'car_id': -1,
                              'destination': 908,
                              'origin': 383,
                              'status': 'waiting'},
                       '16': {'car_id': -1,
                              'destination': 862,
                              'origin': 325,
                              'status': 'waiting'},
                       '17': {'car_id': -1,
                              'destination': 104,
                              'origin': 563,
                              'status': 'waiting'},
                       '18': {'car_id': -1,
                              'destination': 620,
                              'origin': 183,
                              'status': 'waiting'},
                       '19': {'car_id': -1,
                              'destination': 439,
                              'origin': 767,
                              'status': 'waiting'},
                       '2': {'car_id': -1,
                             'destination': 962,
                             'origin': 112,
                             'status': 'waiting'},
                       '3': {'car_id': -1,
                             'destination': 323,
                             'origin': 844,
                             'status': 'waiting'},
                       '4': {'car_id': -1,
                             'destination': 903,
                             'origin': 103,
                             'status': 'waiting'},
                       '5': {'car_id': -1,
                             'destination': 79,
                             'origin': 288,
                             'status': 'waiting'},
                       '6': {'car_id': -1,
                             'destination': 300,
                             'origin': 320,
                             'status': 'waiting'},
                       '7': {'car_id': -1,
                             'destination': 820,
                             'origin': 755,
                             'status': 'waiting'},
                       '8': {'car_id': -1,
                             'destination': 601,
                             'origin': 886,
                             'status': 'waiting'},
                       '9': {'car_id': -1,
                             'destination': 503,
                             'origin': 726,
                             'status': 'waiting'}},
         'grid': [False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  True,
                  True,
                  True,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  True,
                  False,
                  False,
                  True,
                  False,
                  True,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  True,
                  False,
                  False,
                  True,
                  False,
                  True,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  True,
                  False,
                  False,
                  True,
                  False,
                  True,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  True,
                  False,
                  False,
                  True,
                  False,
                  True,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  False,
                  False,
                  True,
                  True,
                  False,
                  False,
                  True,
                  False,
                  True,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  True,
                  False,
                  False,
                  True,
                  True,
                  True,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  True,
                  False,
                  False,
                  True,
                  False,
                  True,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  True,
                  False,
                  False,
                  True,
                  True,
                  True,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  True,
                  False,
                  False,
                  True,
                  False,
                  True,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  True,
                  True,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  True,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  True,
                  False,
                  False,
                  True,
                  True,
                  True,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  True,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  True,
                  False,
                  False,
                  True,
                  True,
                  True,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  True,
                  False,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  False,
                  True,
                  True,
                  False,
                  False,
                  True,
                  True,
                  True,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  True,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  True,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  True,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  True,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  True,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  True,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  False,
                  True,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  True,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  False,
                  False,
                  False,
                  False,
                  False,
                  False,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  True,
                  False,
                  False,
                  True,
                  True],
         'height': 32,
         'teams': {'0': {'name': 'Richard-and-Lieselotte', 'score': 0},
                   '1': {'name': 'John-and-Eunice', 'score': 0},
                   '10': {'name': 'Delores-and-Luis', 'score': 0},
                   '11': {'name': 'Joseph-and-Anthony', 'score': -3},
                   '2': {'name': 'Timothy-and-Michael', 'score': 0},
                   '3': {'name': 'James-and-Barbara', 'score': 0},
                   '4': {'name': 'Gene-and-Tammy', 'score': 0},
                   '5': {'name': 'Cynthia-and-Frank', 'score': 0},
                   '6': {'name': 'John-and-Juan', 'score': 0},
                   '7': {'name': 'Jeffrey-and-Ashley', 'score': 0},
                   '8': {'name': 'Renee-and-Carolyn', 'score': 0},
                   '9': {'name': 'Allan-and-Terri', 'score': 0}},
         'ticks': 9345,
         'ticktime': 200,
         'width': 32
         }

    pass_arr = []
    car_pos = []
    s = convert(t["grid"], t['width'])
    paint_map(s)
    for a in t["customers"].values():
        pass_arr.append(int(a['origin']))
    for a in t["cars"].values():
        car_pos.append(int(a['position']))
    print(pass_arr)
    print(car_pos)
    for a in car_pos:
        some_shit, some_t = some_dijkstra(s, pass_arr, t["height"], t["width"], a)
        for i in some_shit:
            # row = []
            print(i.weight)
            print(i.coord)
            print(i.path)
            if some_t[i.coord[0]][i.coord[1]]:
                print(some_t[i.coord[0]][i.coord[1]].coord)
            else:
                print(some_t[i.coord[0]][i.coord[1]])


        for i in some_t:
            row = []
            for a in i:
                if a:
                    sl = a.weight
                else:
                    sl = -1
                row.append(sl)
            for rows in row:
                print(f"{rows:3}",end=" ")
            print("\n")
        print("-----------------------------------------------")

# s = [[]]
#
# for i in range(N):
#     pass
